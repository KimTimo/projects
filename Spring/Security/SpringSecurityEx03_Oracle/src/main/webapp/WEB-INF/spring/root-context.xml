<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- 시큐리티 권한설정 시작 -->
	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/" access="permitAll" />
		<security:intercept-url pattern="/home" access="permitAll" />
		<security:intercept-url pattern="/admin**" access="hasRole('ADMIN')" />
		<security:intercept-url pattern="/dba**" access="hasRole('ADMIN') and hasRole('DBA')" />
		<!-- 접근 불가능한 곳에 접근시 처리할 페이지 지정 -->
		<security:access-denied-handler error-page="/403" />
		<!-- 사용자가 만든 로그인 페이지를 사용하려면 이부분을 수정한다. -->
		<security:form-login 
		login-page="/login" 
		username-parameter="userid" 
		password-parameter="password"
		default-target-url="/"
		authentication-failure-url="/login?error" /> <!-- 로그인 실패시 이동하 페이지 지정 -->
		<security:logout logout-success-url="/login?logout"/> <!-- 로그아웃 성공시 이동할 페이지 지정 -->
		<!-- csrf 프로텍션을 사용하겠다. -->
		<security:csrf />
	</security:http>
	<!-- 시큐리티 권한설정 종료 -->
	<!-- 시큐리티 사용자 설정 시작 -->
	<security:authentication-manager>
		<!-- 
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource"
			users-by-username-query="select username as username, password as password, enabled from users where username=?"
			authorities-by-username-query="select username, role from user_roles where username=?"
			/>
		 -->
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource"
			users-by-username-query="select userid as username, password , 1 from member where userid=?"
			authorities-by-username-query="select username, role from user_roles where username=?"
			/>
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- 시큐리트 암호화 객체 등록  -->
	<bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<!-- 시큐리티 사용자 설정 종료 -->

	<!-- dataSource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:XE" />
		<property name="username" value="jspuser" />
		<property name="password" value="123456" />
  	</bean>
</beans>
